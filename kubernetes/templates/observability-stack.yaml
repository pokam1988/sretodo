{{- if .Values.observabilityStack.enabled }}
---
# OpenTelemetry Collector
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-otel-collector
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: otel-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sretodo.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: otel-collector
  template:
    metadata:
      labels:
        {{- include "sretodo.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: otel-collector
    spec:
      securityContext:
        fsGroup: 1011430000
      containers:
        - name: otel-collector
          image: "{{ .Values.observabilityStack.otelCollector.image }}:{{ .Values.observabilityStack.otelCollector.tag }}"
          imagePullPolicy: {{ .Values.observabilityStack.otelCollector.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1011430000
            runAsGroup: 1011430000
          ports:
            - name: otlp-grpc
              containerPort: 4317
              protocol: TCP
            - name: otlp-http
              containerPort: 4318
              protocol: TCP
            - name: prometheus
              containerPort: 8889
              protocol: TCP
          volumeMounts:
            - name: otel-collector-config
              mountPath: /etc/otelcol-contrib/config.yaml
              subPath: config.yaml
      volumes:
        - name: otel-collector-config
          configMap:
            name: {{ .Release.Name }}-otel-collector-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-otel-collector-config
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: otel-collector
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:

    processors:
      batch:
        timeout: 1s

    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
      otlp/tempo:
        endpoint: {{ .Release.Name }}-tempo:4317
        tls:
          insecure: true
      loki:
        endpoint: http://{{ .Release.Name }}-loki:3100/loki/api/v1/push

    service:
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [batch]
          exporters: [prometheus]
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp/tempo]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [loki]
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-otel-collector
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: otel-collector
spec:
  type: ClusterIP
  ports:
    - port: 4317
      targetPort: otlp-grpc
      protocol: TCP
      name: otlp-grpc
    - port: 4318
      targetPort: otlp-http
      protocol: TCP
      name: otlp-http
    - port: 8889
      targetPort: prometheus
      protocol: TCP
      name: prometheus
  selector:
    {{- include "sretodo.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: otel-collector
---
# Prometheus
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-prometheus
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sretodo.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      labels:
        {{- include "sretodo.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: prometheus
    spec:
      securityContext:
        fsGroup: 1011430000
      containers:
        - name: prometheus
          image: "{{ .Values.observabilityStack.prometheus.image }}:{{ .Values.observabilityStack.prometheus.tag }}"
          imagePullPolicy: {{ .Values.observabilityStack.prometheus.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1011430000
            runAsGroup: 1011430000
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
            - name: prometheus-data
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ .Release.Name }}-prometheus-config
        - name: prometheus-data
          emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-prometheus-config
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'otel-collector'
        static_configs:
          - targets: ['{{ .Release.Name }}-otel-collector:8889']
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-prometheus
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "sretodo.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
---
# Tempo (Traces)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-tempo
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: tempo
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sretodo.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: tempo
  template:
    metadata:
      labels:
        {{- include "sretodo.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: tempo
    spec:
      securityContext:
        fsGroup: 1011430000
      containers:
        - name: tempo
          image: "{{ .Values.observabilityStack.tempo.image }}:{{ .Values.observabilityStack.tempo.tag }}"
          imagePullPolicy: {{ .Values.observabilityStack.tempo.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1011430000
            runAsGroup: 1011430000
          ports:
            - name: tempo
              containerPort: 3200
              protocol: TCP
            - name: otlp-grpc
              containerPort: 4317
              protocol: TCP
          volumeMounts:
            - name: tempo-config
              mountPath: /etc/tempo/tempo.yaml
              subPath: tempo.yaml
            - name: tempo-data
              mountPath: /tmp/tempo
      volumes:
        - name: tempo-config
          configMap:
            name: {{ .Release.Name }}-tempo-config
        - name: tempo-data
          emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-tempo-config
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: tempo
data:
  tempo.yaml: |
    server:
      http_listen_port: 3200

    distributor:
      receivers:
        otlp:
          protocols:
            grpc:

    ingester:
      max_block_duration: 5m
      trace_idle_period: 10s

    compactor:
      compaction:
        block_retention: 1h

    storage:
      trace:
        backend: local
        local:
          path: /tmp/tempo
        pool:
          max_workers: 100
          queue_depth: 10000
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-tempo
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: tempo
spec:
  type: ClusterIP
  ports:
    - port: 3200
      targetPort: tempo
      protocol: TCP
      name: tempo
    - port: 4317
      targetPort: otlp-grpc
      protocol: TCP
      name: otlp-grpc
  selector:
    {{- include "sretodo.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: tempo
---
# Loki (Logs)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-loki
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sretodo.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: loki
  template:
    metadata:
      labels:
        {{- include "sretodo.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: loki
    spec:
      securityContext:
        fsGroup: 1011430000
      containers:
        - name: loki
          image: "{{ .Values.observabilityStack.loki.image }}:{{ .Values.observabilityStack.loki.tag }}"
          imagePullPolicy: {{ .Values.observabilityStack.loki.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1011430000
            runAsGroup: 1011430000
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/local-config.yaml
              subPath: local-config.yaml
            - name: loki-data
              mountPath: /loki
      volumes:
        - name: loki-config
          configMap:
            name: {{ .Release.Name }}-loki-config
        - name: loki-data
          emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-loki-config
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: loki
data:
  local-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100

    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 5m
      chunk_retain_period: 30s

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/boltdb-shipper-active
        cache_location: /loki/boltdb-shipper-cache
        cache_ttl: 24h
      filesystem:
        directory: /loki/chunks

    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-loki
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: loki
spec:
  type: ClusterIP
  ports:
    - port: 3100
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "sretodo.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: loki
---
# Grafana
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-grafana
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sretodo.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        {{- include "sretodo.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
    spec:
      securityContext:
        fsGroup: 1011430000
      containers:
        - name: grafana
          image: "{{ .Values.observabilityStack.grafana.image }}:{{ .Values.observabilityStack.grafana.tag }}"
          imagePullPolicy: {{ .Values.observabilityStack.grafana.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1011430000
            runAsGroup: 1011430000
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
      volumes:
        - name: grafana-datasources
          configMap:
            name: {{ .Release.Name }}-grafana-datasources
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-datasources
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://{{ .Release.Name }}-prometheus:9090
        isDefault: true
      - name: Tempo
        type: tempo
        access: proxy
        url: http://{{ .Release.Name }}-tempo:3200
      - name: Loki
        type: loki
        access: proxy
        url: http://{{ .Release.Name }}-loki:3100
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-grafana
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "sretodo.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
{{- end }}